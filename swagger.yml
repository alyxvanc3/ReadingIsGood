openapi: 3.0.3
info:
  title: Reading Is Good
  version: 1.0.0
tags:
  - name: customer
  - name: book
  - name: order
paths:
  /customer:
    post:
      tags:
        - customer
      summary: Adds a new customer
      operationId: addCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '200':
          description: Successful operation
        '405':
          description: Invalid input
  /customer/order/{customerId}:
    get:
      tags:
        - customer
      summary: gets orders of customer
      operationId: getOrdersByCustomerId
      parameters:
        - name: customerId
          in: path
          description: customerId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found
  /book:
    post:
      tags:
        - book
      summary: Adds a new book
      operationId: addBook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          description: Successful operation
        '405':
          description: Invalid input
    put:
      tags:
        - book
      summary: update quantity of book
      operationId: updateQuantity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '405':
          description: Invalid input
  /order:
    post:
      tags:
        - order
      summary: Place an order
      description: Place a new order
      operationId: saveOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '405':
          description: Invalid input
  /order/{orderId}:
    get:
      tags:
        - order
      summary: Gets order
      description: Gets order
      operationId: getOrder
      parameters:
        - name: orderId
          in: path
          description: orderId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '405':
          description: Invalid input
  /authenticate:
    post:
      tags:
        - authenticate
      summary: authentication
      description: authentication
      operationId: authenticate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Authentication'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '405':
          description: Invalid input
  /statistics/{customerId}:
    get:
      tags:
        - statistics
      summary: get customer montly statictics
      description: get customer montly statictics
      operationId: getStatistics
      parameters:
        - name: customerId
          in: path
          description: id
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '400':
          description: Invalid ID supplied
        '404':
          description: Customer not found
  /order/date:
    get:
      tags:
        - order
      summary: Find purchase order by ID
      description: get order by id
      operationId: getOrderById
      parameters:
        - name: startDate
          in: body
          description: start date
          required: true
          schema:
            type: string
            format: date
        - name: endDate
          in: body
          description: end date
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found

components:
  schemas:
    Order:
      type: object
      required:
        - customerNo
        - operationDate
        - orderDetails
      properties:
        id:
          type: integer
          format: int64
          example: 1
        customerNo:
          type: integer
          format: int64
          example: 1
        operationDate:
          type: string
          format: date
        orderDetails:
          type: array
          items:
            $ref: '#/components/schemas/OrderDetail'
    OrderDetail:
      type: object
      required:
        - book
        - quantity
      properties:
        book:
          items:
            $ref: '#/components/schemas/Book'
        quantity:
          type: integer
          format: int64
          example: 1
    Book:
      type: object
      required:
        - isbn
        - price
      properties:
        id:
          type: integer
          format: int64
          example: 1
        isbn:
          type: integer
          format: int64
          example: 1
        price:
          type: string
          example: 10.00
        quantity:
          type: integer
          example: 4*
    Customer:
      type: object
      required:
        - number
      properties:
        id:
          type: integer
          format: int64
          example: 1
        number:
          type: integer
          format: int64
          example: 1
    Authentication:
      type: object
      properties:
        username:
          type: string
          example: ayse
        password:
          type: string
          example: password
    Token:
      type: string
